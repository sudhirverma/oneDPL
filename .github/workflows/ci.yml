name: oneDPL CI
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - release_oneDPL
      - main
      - 'release/**'

env:
  BUILD_CONCURRENCY: 2
  MACOS_BUILD_CONCURRENCY: 3
  TEST_TIMEOUT: 360
  MACOS_ONEAPI_DOWNLOAD_LINK: https://registrationcenter-download.intel.com/akdlm/irc_nas/18358/m_cpp-compiler-classic_p_2022.0.0.62_offline.dmg

jobs:
  
  linux-testing:
    name: ${{ matrix.os }}_${{ matrix.cxx_compiler }}_backend=${{ matrix.backend }}_device=${{ matrix.device_type }}_cxx${{ matrix.std }}_${{ matrix.build_type }}
    runs-on: ['${{ matrix.os }}']
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            cxx_compiler: g++
            std: 17
            build_type: release
            backend: tbb
            device_type: HOST
    steps:
      - uses: actions/checkout@v2
      - name: Install Intel® oneAPI Threading Building Blocks (oneTBB)
        run: $CONDA/bin/conda install -c intel tbb-devel
      - name: Install Intel® oneAPI DPC++/C++ Compiler
        if: matrix.cxx_compiler == 'icpx' || matrix.cxx_compiler == 'icx' || matrix.cxx_compiler == 'icx-cl' || matrix.cxx_compiler == 'dpcpp' || matrix.cxx_compiler == 'dpcpp-cl'
        run: $CONDA/bin/conda install -c intel dpcpp_linux-64
      - name: Run testing
        shell: bash
        run: |
          set -x
          source $CONDA/bin/activate
          export PATH=$CONDA/lib:$PATH
          export CPATH=$CONDA/include:$CPATH
          export OCL_ICD_FILENAMES=$CONDA/lib/libintelocl.so
          if [[ "${{ matrix.cxx_compiler }}" == "icpx" ]] || [[ "${{ matrix.cxx_compiler }}" == "icx" ]] || [[ "${{ matrix.cxx_compiler }}" == "icx-cl" ]] || [[ "${{ matrix.cxx_compiler }}" == "dpcpp" ]] || [[ "${{ matrix.cxx_compiler }}" == "dpcpp-cl" ]]; then
            echo "::warning::Compiler: $(${{ matrix.cxx_compiler }} --version)"
          fi
          if [[ "${{ matrix.backend }}" == "dpcpp" ]]; then
            make_targets="build-onedpl-sycl_iterator-tests"
            ctest_flags="-R sycl_iterator_.*\.pass"
            echo "::warning::dpcpp backend is set. Compile and run only sycl_iterator tests"
          else
            make_targets="build-onedpl-tests"
          fi
          mkdir build && cd build
          lscpu
          cmake -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} -DONEDPL_BACKEND=${{ matrix.backend }} -DONEDPL_DEVICE_TYPE=${{ matrix.device_type }} ..
          make VERBOSE=1 -j${BUILD_CONCURRENCY} ${make_targets}
          ctest --timeout ${TEST_TIMEOUT} --output-on-failure ${ctest_flags}

  
